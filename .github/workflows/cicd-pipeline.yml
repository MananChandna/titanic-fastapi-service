# Name of the workflow
name: 'CI/CD Pipeline for FastAPI Service'

# --- Trigger Conditions ---
on:
  push:
    branches:
      - main

# --- Environment Variables ---
env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: titanic-prediction-api

# --- Jobs ---
jobs:
  # --- LINT & TEST JOB ---
  test-and-lint:
    name: 'Lint and Test Application'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # --- MODIFIED STEP ---
      - name: Test with pytest
        run: |
          # CRITICAL: Create the model file before running tests that import main.py
          python3 train_model.py
          pytest

  # --- BUILD & PUSH JOB ---
  build-and-push:
    name: 'Build and Push Docker Image'
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
