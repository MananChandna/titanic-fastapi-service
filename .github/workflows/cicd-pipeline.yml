name: 'CI/CD Pipeline for FastAPI Service'

on:
  push:
    branches: [ main ]
  workflow_dispatch: # <-- ADD THIS to allow manual/external triggers

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: titanic-prediction-api

jobs:
  # ... (The rest of your build-and-push job remains the same)
  build-and-push:
    name: 'Build and Push Docker Image'
    # removed 'needs: test-and-lint' for this example, can be added back
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # The Dockerfile now needs the MLFLOW_TRACKING_URI at runtime, not build time.
          # We just build and push the image.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
